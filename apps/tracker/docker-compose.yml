services:
  redis:
    image: redis:7.4.3-alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - "16379:16379"
    volumes:
      - redis_data:/data
    command: redis-server --port 16379
    healthcheck:
      test: [ "CMD", "redis-cli", "-p", "16379", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 16379
      HOST: "0.0.0.0"
      PORT: 5000
      WORKERS_COUNT: 4
    ports:
      - "5000:5000"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    restart: unless-stopped
    environment:
      NEXT_PUBLIC_BACKEND_URL: http://localhost:5000
      HOST: "0.0.0.0"
      PORT: 3000
      NODE_ENV: production
    ports:
      - "3000:3000"
    depends_on:
      - backend

  nginx:
    # build instead of pull
    build:
      context: ./nginx
      dockerfile: Dockerfile

    container_name: nginx
    restart: unless-stopped

    ports:
      - "80:80"
      - "5000:5000/udp"

    depends_on:
      - backend
      - frontend

volumes:
  redis_data:
