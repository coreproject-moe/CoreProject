[project]
name = "coreproject"
version = "0.1.0"
description = "A modern backend powering the the world's most advanced anime site"
authors = [{ name = "baseplate-admin", email = "61817579+baseplate-admin@users.noreply.github.com" }]
requires-python = ">=3.13,<3.14"
readme = "README.md"
license = "AGPL-3.0-only"
dependencies = [
    "django[argon2]>=5.1",
    "redis>=4.5.4",
    "pillow>=10.1.0",
    "psycopg[binary]>=3.1.12",
    "django-ltree-2>=0.1.10,<0.2",
    "django-ratelimit>=4.1.0",
    "django-dynamic-filenames",
    "django-defender>=0.9.7",
    "django_cleanup",
    "django_cors_headers",
    "python_dotenv",
    "whitenoise>=6.6.0",
    "celery[redis]>=5.3.0",
    "django-hstore-widget>=0.0.7",
    "django-colorfield",
    "requests>=2.31.0",
    "requests-cache>=1.1.0",
    "uvicorn[standard]>=0.21.1",
    "django-stubs-ext",
    "python-dateutil>=2.8.2",
    "django-vite>=3.0.6,<4",
    "django-ninja>=1.3.0",
    "pydantic[email]>=2.10.5",
]

[dependency-groups]
dev = [
    "django-browser-reload>=1.17.0,<2",
    "django_debug_toolbar",
    "django_dbbackup",
    "django_cprofile_middleware",
    "ruff>=0.2.0",
    "mypy>=1.6.1",
    "django_stubs[compatible_mypy]",
    "types_redis",
    "types-requests>=2.32.0.20241016,<3",
    "types-markdown>=3.7.0.20241204,<4",
    "types-pyyaml>=6.0.12.20241230,<7",
    "types-python-dateutil>=2.9.0.20241206,<3",
    "poethepoet>=0.32.1,<0.33",
    "django-extensions>=3.2.3,<4",
]
test = [
    "pytest>=8.3.4,<9",
    "pytest-django>=4.9.0,<5",
]

[tool.uv]
default-groups = [
    "dev",
    "test",
]


[tool.poe.tasks]
dev = 'python ./django_core/manage.py runserver 127.0.0.1:9000'
## Prod servers
# prod_uvicorn = "gunicorn --app-dir=django_core core.asgi:application -w 4 -k uvicorn.workers.UvicornWorker" # For linux only
##  Migrations
sync = "python ./django_core/manage.py migrate"
mksync = "python ./django_core/manage.py makemigrations"
createsuperuser = 'python ./django_core/manage.py createsuperuser'
## Staticfiles
collectstatic = "python ./django_core/manage.py collectstatic --clear --link" # Dont duplicate copy files.
## Mypy
mypy = "mypy . --enable-incomplete-feature=Unpack"
## Django extensions
graph = "python django_core/manage.py graph_models -a -o mymodel.png"
reset_db = "python django_core/manage.py reset_db"


[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "core.settings"
pythonpath = 'django_core'
python_files = ["test_*.py", "*_test.py", "testing/python/*.py"]

[tool.mypy]
show_error_codes = true
warn_unreachable = true
strict = true
disallow_any_generics = true
disallow_subclassing_any = true
warn_return_any = true
ignore_missing_imports = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_unused_configs = true
check_untyped_defs = true
follow_imports = "silent"
plugins = [
  "mypy_django_plugin.main",
]
exclude = [
    "migrations"
]
mypy_path = "django_core"
namespace_packages = true
explicit_package_bases = true

[tool.django-stubs]
django_settings_module = "core.settings"

[tool.ruff]
line-length = 92

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    # https://github.com/charliermarsh/ruff/issues/61#issuecomment-1233497658
    '**/migrations/*',
    # Ignore tests
    '**/test/*'
]


# Assume Python 3.11
target-version = "py312"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"
# Like Black, indent with spaces, rather than tabs.
indent-style = "space"
# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false
# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.ruff.lint.isort]
case-sensitive = true
combine-as-imports = true
force-sort-within-sections = true

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402"]
"settings.py" = ["E402"]
