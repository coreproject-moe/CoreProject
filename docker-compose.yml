services:
    db:
        restart: unless-stopped
        image: postgres:15-alpine
        volumes:
            - ./data/db:/var/lib/postgresql/data
        environment:
            - POSTGRES_HOST_AUTH_METHOD=trust
            - POSTGRES_DB=postgres
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=supersecretpassword
    redis:
        restart: unless-stopped
        image: redis:7.0.5-alpine

    # Celery
    celery:
        image: coreproject
        restart: unless-stopped
        build: ./backend
        dns:
            - 1.1.1.1
        volumes:
            - ./media:/code/django_core/media
        entrypoint: /code/worker_entrypoint.sh
        environment:
            - DEBUG=False
            # Cache related settings
            - CACHE_MIDDLEWARE_SECONDS=10
            - REDIS_URL=redis://redis:6379/0
            - DJANGO_CACHE_LOCATION=redis://redis:6379/1
            - DEFENDER_REDIS_URL=redis://redis:6379/2
            # POSTGRS specific codse
            - POSTGRES_NAME=postgres
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=supersecretpassword
            - "POSTGRES_HOST=db"
            - POSTGRES_PORT=5432
            # Sitename related things
            - DJANGO_ALLOWED_HOSTS=backend.${SITE_ADDRESS}
            - SITE_ADDRESS=${SITE_ADDRESS}
            # Secret Keys
            # - MAL_CLIENT_ID=
            # - MAL_CLIENT_SECRET=
            # - STREAMSB_KEY=
        depends_on:
            - db
            - redis
    beat:
        image: coreproject
        restart: unless-stopped
        build: ./backend
        dns:
            - 1.1.1.1
        volumes:
            - ./media:/code/django_core/media
        entrypoint: /code/beat_entrypoint.sh
        environment:
            - DEBUG=False
            # Cache related settings
            - CACHE_MIDDLEWARE_SECONDS=10
            - REDIS_URL=redis://redis:6379/0
            - DJANGO_CACHE_LOCATION=redis://redis:6379/1
            - DEFENDER_REDIS_URL=redis://redis:6379/2
            # POSTGRS specific codse
            - POSTGRES_NAME=postgres
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=supersecretpassword
            - "POSTGRES_HOST=db"
            - POSTGRES_PORT=5432
            # Sitename related things
            - DJANGO_ALLOWED_HOSTS=backend.${SITE_ADDRESS}
            - SITE_ADDRESS=${SITE_ADDRESS}
            # Secret Keys
            # - MAL_CLIENT_ID=
            # - MAL_CLIENT_SECRET=
            # - STREAMSB_KEY=
        depends_on:
            - db
            - redis
            - celery

    # Backend
    django:
        image: coreproject
        restart: unless-stopped
        build: ./backend
        entrypoint: /code/server_entrypoint.sh
        dns:
            - 1.1.1.1
        volumes:
            - ./media:/code/django_core/media
            - ./logs:/code/logs
        environment:
            - DEBUG=False
            # Cache related settings
            - CACHE_MIDDLEWARE_SECONDS=10
            - REDIS_URL=redis://redis:6379/0
            - DJANGO_CACHE_LOCATION=redis://redis:6379/1
            - DEFENDER_REDIS_URL=redis://redis:6379/2
            # POSTGRS specific codse
            - POSTGRES_NAME=postgres
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=supersecretpassword
            - "POSTGRES_HOST=db"
            - POSTGRES_PORT=5432
            # Sitename related things
            - DJANGO_ALLOWED_HOSTS=backend.${SITE_ADDRESS}
            - SITE_ADDRESS=${SITE_ADDRESS}
            # Secret Keys
            # - MAL_CLIENT_ID=
            # - MAL_CLIENT_SECRET=
            # - STREAMSB_KEY=
        depends_on:
            - db
            - redis
            - celery
            - beat

    # Frontend
    anime:
        image: frontend
        restart: unless-stopped
        build: ./frontend/AnimeCore
        dns: 1.1.1.1
        environment:
            - PORT=3000
            - HOST=0.0.0.0

    # Varnish
    # django-varnish:
    #     image: varnish:fresh
    #     volumes:
    #         - ./varnish/django.vcl:/etc/varnish/default.vcl:ro
    #     depends_on:
    #         - django

    # Web server
    caddy:
        image: caddy:alpine
        restart: unless-stopped
        dns:
            - 1.1.1.1
        ports:
            - 80:80 # Needed for the ACME HTTP-01 challenge.
            - 443:443
        volumes:
            - ./Caddyfile:/etc/caddy/Caddyfile:ro
            - ./caddy-config:/config
            - ./caddy-data:/data
            - ./media:/srv/media
            - ./logs:/srv/logs
        environment:
            - SITE_ADDRESS=${SITE_ADDRESS}
            - LOG_FILE=/data/access.log

        depends_on:
            - django
            - anime
